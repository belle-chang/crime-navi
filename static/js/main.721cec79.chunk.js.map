{"version":3,"sources":["Map.js","index.js"],"names":["mapboxgl","accessToken","Map","mapContainerRef","useRef","useState","lng","setLng","lat","setLat","zoom","setZoom","useEffect","map","container","current","style","center","on","addSource","type","data","cluster","clusterMaxZoom","clusterRadius","addLayer","id","source","filter","paint","layout","addControl","NavigationControl","getCenter","toFixed","getZoom","dictionary","bos","fw","key","hasOwnProperty","console","log","link","document","createElement","href","className","textContent","onclick","e","index","clickedLayer","preventDefault","stopPropagation","getLayoutProperty","setLayoutProperty","this","getElementById","appendChild","remove","ref","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.721cec79.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport './Map.css';\n\nmapboxgl.accessToken =\n    'pk.eyJ1IjoiYW5hYmVsbGVjaGFuZyIsImEiOiJja20xZmVxNGYwMTRpMnJtemJ0M3podzFzIn0.punpaEzFpzG4kmbcpdtwUQ'\n\nconst Map = () => {\n  const mapContainerRef = useRef(null);\n\n  const [lng, setLng] = useState(-71.0799);\n  const [lat, setLat] = useState(42.3083)\n  const [zoom, setZoom] = useState(11.59);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n    //   style: 'mapbox://styles/anabellechang/ckm11howb889h17qf87wj3ld6',\n      center: [lng, lat],\n      zoom: zoom\n    });\n\n\n    map.on('load', function() {\n        map.addSource(\"crime-bos\", {\n            type: 'geojson',\n            // data: 'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_10m_ports.geojson'\n            data: 'https://raw.githubusercontent.com/belle-chang/navi-crime/main/data/jsonformatter-2.json',\n            cluster: true,\n            clusterMaxZoom: 14,\n            clusterRadius: 50\n        });\n        // https://docs.mapbox.com/mapbox-gl-js/example/cluster/\n        // Add our layer\n        map.addLayer({\n            id: \"clusters\",\n            source: \"crime-bos\", // this should be the id of the source\n            type: \"circle\",\n            filter: ['has', 'point_count'],\n            // paint properties\n            paint: {\n            //   \"circle-opacity\": 0.75,\n            //   \"circle-stroke-width\": 1,\n            //   \"circle-radius\": 4,\n            //   \"circle-color\": \"#FFEB3B\"\n                'circle-color': [\n                    'step',\n                    ['get', 'point_count'],\n                    '#51bbd6',\n                    25,\n                    '#f1f075',\n                    100,\n                    '#f28cb1'\n                    ],\n                    'circle-radius': [\n                    'step',\n                    ['get', 'point_count'],\n                    20,\n                    25,\n                    30,\n                    100,\n                    40\n                ]\n            },\n            layout: {\n                // make layer visible by default\n                'visibility': 'visible'\n            }\n        });\n\n        map.addLayer({\n            id: 'cluster-count',\n            // id: 'clusters',\n            type: 'symbol',\n            source: 'crime-bos',\n            filter: ['has', 'point_count'],\n            layout: {\n                'text-field': '{point_count_abbreviated}',\n                'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n                'text-size': 12,\n                'visibility': 'visible'\n            }\n        });\n\n        map.addLayer({\n            id: 'unclustered-point',\n            // id: 'clusters',\n            type: 'circle',\n            source: 'crime-bos',\n            filter: ['!', ['has', 'point_count']],\n            paint: {\n                'circle-color': '#11b4da',\n                'circle-radius': 4,\n                'circle-stroke-width': 1,\n                'circle-stroke-color': '#fff'\n                },\n            layout: {\n                // make layer visible by default\n                'visibility': 'visible'\n                }\n            });\n\n        map.addSource(\"crime-fw\", {\n            type: 'geojson',\n            // data: 'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_10m_ports.geojson'\n            data: 'https://raw.githubusercontent.com/belle-chang/crime-navi/main/data/fw_final.json',\n            cluster: true,\n            clusterMaxZoom: 14,\n            clusterRadius: 50\n        });\n        // https://docs.mapbox.com/mapbox-gl-js/example/cluster/\n        // Add our layer\n        map.addLayer({\n            id: \"clusters-fw\",\n            source: \"crime-fw\", // this should be the id of the source\n            type: \"circle\",\n            filter: ['has', 'point_count'],\n            // paint properties\n            paint: {\n            //   \"circle-opacity\": 0.75,\n            //   \"circle-stroke-width\": 1,\n            //   \"circle-radius\": 4,\n            //   \"circle-color\": \"#FFEB3B\"\n                'circle-color': [\n                    'step',\n                    ['get', 'point_count'],\n                    '#51bbd6',\n                    25,\n                    '#f1f075',\n                    100,\n                    '#f28cb1'\n                    ],\n                    'circle-radius': [\n                    'step',\n                    ['get', 'point_count'],\n                    20,\n                    25,\n                    30,\n                    100,\n                    40\n                ]\n            },\n            layout: {\n                // make layer visible by default\n                'visibility': 'visible'\n            }\n        });\n\n        map.addLayer({\n            id: 'cluster-count-fw',\n            // id: 'clusters',\n            type: 'symbol',\n            source: 'crime-fw',\n            filter: ['has', 'point_count'],\n            layout: {\n                'text-field': '{point_count_abbreviated}',\n                'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n                'text-size': 12,\n                'visibility': 'visible'\n            }\n        });\n\n        map.addLayer({\n            id: 'unclustered-point-fw',\n            // id: 'clusters',\n            type: 'circle',\n            source: 'crime-fw',\n            filter: ['!', ['has', 'point_count']],\n            paint: {\n                'circle-color': '#11b4da',\n                'circle-radius': 4,\n                'circle-stroke-width': 1,\n                'circle-stroke-color': '#fff'\n                },\n            layout: {\n                // make layer visible by default\n                'visibility': 'visible'\n                }\n        });\n    });\n\n    // Add navigation control (the +/- zoom buttons)\n    // Add navigation controls to the top right of the canvas\n    map.addControl(new mapboxgl.NavigationControl());\n    // map.addControl(new mapboxgl.NavigationControl(), 'top-right');\n\n    map.on('move', function() {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    });\n\n    // CHANGE: Add layer names that need to be toggled\n    var dictionary = {\n        bos: ['clusters', 'cluster-count', 'unclustered-point'],\n        fw: ['clusters-fw', 'cluster-count-fw', 'unclustered-point-fw']\n    }\n\n    for (let key in dictionary) {\n        // check if the property/key is defined in the object itself, not in parent\n        if (dictionary.hasOwnProperty(key)) {           \n            console.log(key, dictionary[key]);\n\n            var link = document.createElement('a');\n            link.href = '#';\n            link.className = 'active';\n            link.textContent = key;\n            link.onclick = function (e) {\n                \n                for (var index in dictionary[key]) {\n                var clickedLayer = dictionary[key][index];\n                e.preventDefault();\n                e.stopPropagation();\n            \n                var visibility = map.getLayoutProperty(clickedLayer, 'visibility');\n            \n                if (visibility === 'visible') {\n                    map.setLayoutProperty(clickedLayer, 'visibility', 'none');\n                    this.className = '';\n                } else {\n                    this.className = 'active';\n                    map.setLayoutProperty(clickedLayer, 'visibility', 'visible');\n                }\n            }\n            \n        };\n        var layers = document.getElementById('menu');\n        layers.appendChild(link);\n        }\n    }\n    \n\n    // Clean up on unmount\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n        <nav id=\"menu\"></nav>\n      <div className='sidebarStyle'>\n        <div>\n          Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n        </div>\n      </div>\n      <div className='map-container' ref={mapContainerRef} />\n      \n    </div>\n  );\n};\n\nexport default Map;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import App from './App';\nimport Map from './Map';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Map />\n    {/* <App /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}